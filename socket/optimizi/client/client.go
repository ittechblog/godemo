package main

import (
	"igen.com/bee/socket/optimizi/protocol"
	"fmt"
	"net"
	"os"
	"time"
	"strconv"
	"encoding/binary"
)

func sender(conn net.Conn) {
	for i := 0; i < 500; i++ {
		//words := "{\"Id\":1,\"Name\":\"golang\",\"Message\":\"message\"}"
		words
		data := []byte(words)
		runningNumber := binary.BigEndian.Uint16(data[2:4])
		println(runningNumber)
		conn.Write(protocol.Packet(data))


	}
	fmt.Println("send over")
}

func main() {

	words
	data := []byte(words)
	runningNumber := binary.BigEndian.Uint16(data[2:4])
	println(runningNumber)
	fmt.Printf("%x\n","02")

	println(strconv.FormatInt(10,16))
	println(strconv.FormatInt(0x10,10))
	server := "127.0.0.1:9988"
	tcpAddr, err := net.ResolveTCPAddr("tcp4", server)
	if err != nil {
		fmt.Fprintf(os.Stderr, "Fatal error: %s", err.Error())
		os.Exit(1)
	}

	conn, err := net.DialTCP("tcp", nil, tcpAddr)
	if err != nil {
		fmt.Fprintf(os.Stderr, "Fatal error: %s", err.Error())
		os.Exit(1)
	}

	defer conn.Close()
	fmt.Println("connect success")
	go sender(conn)
	for {
		time.Sleep(1 * 1e9)
	}


}

/**
 * 十进制转十六进制
 */
func toHex(ten int) (hex []int, length int) {
	m := 0

	hex = make([]int, 0)
	length = 0;

	for {
		m = ten / 16
		ten = ten % 16

		if (m == 0) {
			hex = append(hex, ten)
			length++
			break
		}

		hex = append(hex, m)
		length++;
	}
	return
}
