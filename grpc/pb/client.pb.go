// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client.proto

/*
Package client is a generated protocol buffer package.

It is generated from these files:
	client.proto

It has these top-level messages:
	ClientRequest
	ClientReply
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type ClientRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *ClientRequest) Reset()                    { *m = ClientRequest{} }
func (m *ClientRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientRequest) ProtoMessage()               {}
func (*ClientRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ClientRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type ClientReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *ClientReply) Reset()                    { *m = ClientReply{} }
func (m *ClientReply) String() string            { return proto.CompactTextString(m) }
func (*ClientReply) ProtoMessage()               {}
func (*ClientReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ClientReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ClientRequest)(nil), "client.ClientRequest")
	proto.RegisterType((*ClientReply)(nil), "client.ClientReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Client service

type ClientClient interface {
	// Sends a greeting
	SayHello(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*ClientReply, error)
}

type clientClient struct {
	cc *grpc.ClientConn
}

func NewClientClient(cc *grpc.ClientConn) ClientClient {
	return &clientClient{cc}
}

func (c *clientClient) SayHello(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*ClientReply, error) {
	out := new(ClientReply)
	err := grpc.Invoke(ctx, "/client.Client/SayHello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Client service

type ClientServer interface {
	// Sends a greeting
	SayHello(context.Context, *ClientRequest) (*ClientReply, error)
}

func RegisterClientServer(s *grpc.Server, srv ClientServer) {
	s.RegisterService(&_Client_serviceDesc, srv)
}

func _Client_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.Client/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServer).SayHello(ctx, req.(*ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Client_serviceDesc = grpc.ServiceDesc{
	ServiceName: "client.Client",
	HandlerType: (*ClientServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Client_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "client.proto",
}

func init() { proto.RegisterFile("client.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 182 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xc9, 0x4c,
	0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0x94, 0xb9, 0x78,
	0x9d, 0xc1, 0xac, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x21, 0x2e, 0x96, 0xbc, 0xc4,
	0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30, 0x5b, 0x49, 0x9d, 0x8b, 0x1b, 0xa6,
	0xa8, 0x20, 0xa7, 0x52, 0x48, 0x82, 0x8b, 0x3d, 0x37, 0xb5, 0xb8, 0x38, 0x31, 0x1d, 0xa6, 0x0a,
	0xc6, 0x35, 0x72, 0xe2, 0x62, 0x83, 0x28, 0x14, 0xb2, 0xe0, 0xe2, 0x08, 0x4e, 0xac, 0xf4, 0x48,
	0xcd, 0xc9, 0xc9, 0x17, 0x12, 0xd5, 0x83, 0x5a, 0x8d, 0x62, 0x93, 0x94, 0x30, 0xba, 0x70, 0x41,
	0x4e, 0xa5, 0x12, 0x83, 0x93, 0x09, 0x97, 0x54, 0x5e, 0x6a, 0x89, 0x5e, 0x4a, 0x6a, 0x59, 0x86,
	0x5e, 0x6a, 0x45, 0x62, 0x6e, 0x41, 0x4e, 0x6a, 0xb1, 0x5e, 0x7a, 0x51, 0x41, 0xb2, 0x5e, 0x4e,
	0x66, 0x92, 0x13, 0xd4, 0x21, 0x01, 0x20, 0x4f, 0x04, 0x30, 0x2e, 0x62, 0x62, 0x73, 0xf6, 0xf1,
	0x74, 0xf5, 0x0b, 0x49, 0x62, 0x03, 0x7b, 0xcb, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x97, 0x76,
	0xf8, 0xfe, 0xe6, 0x00, 0x00, 0x00,
}
